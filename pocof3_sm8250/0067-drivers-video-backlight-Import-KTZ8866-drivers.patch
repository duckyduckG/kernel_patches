From 4abe03a14e20239ba1c24c4e6f6d6ee61f2192c0 Mon Sep 17 00:00:00 2001
From: Sebastiano Barezzi <barezzisebastiano@gmail.com>
Date: Wed, 16 Nov 2022 16:43:24 +0100
Subject: [PATCH 067/157] drivers: video: backlight: Import KTZ8866 drivers

* From dagu-s-oss
* Run clang-format on source files

Change-Id: Ia5ea3da9a3856450e88267b76174d61902209175
---
 drivers/video/backlight/Kconfig           |  12 +
 drivers/video/backlight/Makefile          |   2 +
 drivers/video/backlight/dualktz8866.c     | 438 ++++++++++++++++++++++
 drivers/video/backlight/ktz8866.c         | 275 ++++++++++++++
 include/linux/platform_data/dualktz8866.h | 300 +++++++++++++++
 include/linux/platform_data/ktz8866.h     | 287 ++++++++++++++
 6 files changed, 1314 insertions(+)
 create mode 100644 drivers/video/backlight/dualktz8866.c
 create mode 100644 drivers/video/backlight/ktz8866.c
 create mode 100644 include/linux/platform_data/dualktz8866.h
 create mode 100644 include/linux/platform_data/ktz8866.h

diff --git a/drivers/video/backlight/Kconfig b/drivers/video/backlight/Kconfig
index f0aab649e69c..d25dad9eec59 100644
--- a/drivers/video/backlight/Kconfig
+++ b/drivers/video/backlight/Kconfig
@@ -490,6 +490,18 @@ config BACKLIGHT_RAVE_SP
 	help
 	  Support for backlight control on RAVE SP device.
 
+config BACKLIGHT_KTZ8866
+	tristate "KTZ8866 Backlight"
+	depends on I2C
+	help
+	  If you have a KTZ8866 say Y to enable the backlight driver.
+
+config BACKLIGHT_DUALKTZ8866
+	tristate "Dual KTZ8866 Backlight"
+	depends on I2C
+	help
+	  If you have a KTZ8866 say Y to enable the backlight driver.
+
 endif # BACKLIGHT_CLASS_DEVICE
 
 endif # BACKLIGHT_LCD_SUPPORT
diff --git a/drivers/video/backlight/Makefile b/drivers/video/backlight/Makefile
index 80950e3616ae..e684e49ccff1 100644
--- a/drivers/video/backlight/Makefile
+++ b/drivers/video/backlight/Makefile
@@ -28,6 +28,8 @@ obj-$(CONFIG_BACKLIGHT_ADP8870)		+= adp8870_bl.o
 obj-$(CONFIG_BACKLIGHT_APPLE)		+= apple_bl.o
 obj-$(CONFIG_BACKLIGHT_AS3711)		+= as3711_bl.o
 obj-$(CONFIG_BACKLIGHT_BD6107)		+= bd6107.o
+obj-$(CONFIG_BACKLIGHT_KTZ8866)		+= ktz8866.o
+obj-$(CONFIG_BACKLIGHT_DUALKTZ8866)	+= dualktz8866.o
 obj-$(CONFIG_BACKLIGHT_CARILLO_RANCH)	+= cr_bllcd.o
 obj-$(CONFIG_BACKLIGHT_CLASS_DEVICE)	+= backlight.o
 obj-$(CONFIG_BACKLIGHT_DA903X)		+= da903x_bl.o
diff --git a/drivers/video/backlight/dualktz8866.c b/drivers/video/backlight/dualktz8866.c
new file mode 100644
index 000000000000..3d1d6849efa3
--- /dev/null
+++ b/drivers/video/backlight/dualktz8866.c
@@ -0,0 +1,438 @@
+/*
+ * KTZ Semiconductor KTZ8866 LED Driver
+ *
+ * Copyright (C) 2013 Ideas on board SPRL
+ *
+ * Contact: Chenzilong  <chenzilong1@xiaomi.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/backlight.h>
+#include <linux/delay.h>
+#include <linux/err.h>
+#include <linux/fb.h>
+#include <linux/gpio.h>
+#include <linux/of.h>
+#include <linux/of_gpio.h>
+#include <linux/i2c.h>
+#include <linux/module.h>
+#include <linux/platform_data/dualktz8866.h>
+#include <linux/slab.h>
+#include <linux/proc_fs.h>
+#include <linux/uaccess.h>
+
+#define u8 unsigned char
+
+enum {
+	KTZ8866_A = 0,
+	KTZ8866_B,
+};
+
+struct ktz8866 {
+	u8 chip;
+	struct i2c_client *client;
+	struct backlight_device *backlight;
+	struct ktz8866_platform_data *pdata;
+};
+
+struct ktz8866 *bd;
+struct ktz8866_status ktz8866_status;
+struct pwm_to_51 pwm_map[6] = {
+	{ 10, 0x199 }, { 20, 0x333 }, { 40, 0x666 },
+	{ 60, 0x999 }, { 80, 0xccc }, { 100, 0xFFF },
+};
+
+struct ktz8866 *bd_a;
+struct ktz8866 *bd_b;
+char gresult[30];
+int caseid = 0;
+
+static struct ktz8866_led g_ktz8866_led;
+
+extern int mi_mipi_dsi_dcs_set_pwm_value(u16 dbv_value);
+
+int ktz8866_read(u8 reg, u8 *data)
+{
+	int ret;
+
+	ret = i2c_smbus_read_byte_data(bd->client, reg);
+	if (ret < 0) {
+		dev_err(&bd->client->dev, "failed reading at 0x%02x\n", reg);
+		return ret;
+	}
+
+	*data = (uint8_t)ret;
+
+	return 0;
+}
+
+int ktz8866_write(u8 reg, u8 data)
+{
+	return i2c_smbus_write_byte_data(bd->client, reg, data);
+}
+
+int ktz8866_reads(struct ktz8866 *bd, u8 reg, u8 *data)
+{
+	int ret;
+
+	ret = i2c_smbus_read_byte_data(bd->client, reg);
+	if (ret < 0) {
+		dev_err(&bd->client->dev, "failed reading at 0x%02x\n", reg);
+		return ret;
+	}
+
+	*data = (uint8_t)ret;
+
+	return 0;
+}
+
+int ktz8866_writes(struct ktz8866 *bd, u8 reg, u8 data)
+{
+	return i2c_smbus_write_byte_data(bd->client, reg, data);
+}
+
+static int pwm_to_51(int pwm)
+{
+	int i;
+	for (i = 0; i < 6; i++) {
+		if (pwm == pwm_map[i].pwm)
+			break;
+	}
+
+	return pwm_map[i].bl_value;
+}
+
+static int ktz8866_case1_test(int pwm, char *result)
+{
+	int bl;
+	struct pwm_reg pwm_reg_a;
+	struct pwm_reg pwm_reg_b;
+	u16 pwm_digital_value_a;
+	u16 pwm_digital_value_b;
+
+	bl = pwm_to_51(pwm);
+	mi_mipi_dsi_dcs_set_pwm_value(bl);
+
+	mdelay(500);
+	ktz8866_reads(bd_a, 0x12, &pwm_reg_a.lbyte);
+	ktz8866_reads(bd_a, 0x13, &pwm_reg_a.hbyte);
+
+	ktz8866_reads(bd_b, 0x12, &pwm_reg_b.lbyte);
+	ktz8866_reads(bd_b, 0x13, &pwm_reg_b.hbyte);
+
+	pwm_digital_value_a = pwm_reg_a.hbyte << 8 | pwm_reg_a.lbyte;
+	pwm_digital_value_b = pwm_reg_b.hbyte << 8 | pwm_reg_b.lbyte;
+
+	sprintf(result, "case1_%d_%d", pwm_digital_value_a,
+		pwm_digital_value_b);
+	printk("bl_selftest:  ktz8866_case1_test result: %s\n", result);
+
+	return 0;
+}
+
+static int ktz8866_case2_test(int pwm, char *result)
+{
+	int bl;
+	struct pwm_reg pwm_reg_a;
+	struct pwm_reg pwm_reg_b;
+	ktime_t time_a;
+	ktime_t time_b;
+	ktime_t time_c;
+	u64 diff_a;
+	u64 diff_b;
+
+	bl = pwm_to_51(pwm);
+	mi_mipi_dsi_dcs_set_pwm_value(bl);
+
+	mdelay(128);
+
+	time_a = ktime_get();
+	ktz8866_reads(bd_a, 0x12, &pwm_reg_a.lbyte);
+	ktz8866_reads(bd_a, 0x13, &pwm_reg_a.hbyte);
+	time_b = ktime_get();
+	ktz8866_reads(bd_b, 0x12, &pwm_reg_b.lbyte);
+	ktz8866_reads(bd_b, 0x13, &pwm_reg_b.hbyte);
+	time_c = ktime_get();
+
+	diff_a = (u64)ktime_us_delta(time_b, time_a);
+	diff_b = (u64)ktime_us_delta(time_c, time_b);
+
+	sprintf(result, "case2_%d_%d", diff_a, diff_b);
+
+	printk("bl_selftest:  ktz8866_case2_test result: %s\n", result);
+	return 0;
+}
+
+static ssize_t bl_selftest_read(struct file *file, char __user *buf,
+				size_t count, loff_t *pos)
+{
+	int cnt = strlen(gresult);
+
+	if (*pos != 0)
+		return 0;
+
+	if (copy_to_user(buf, gresult, cnt)) {
+		printk("Failed to copy data to user space\n");
+		return 0;
+	}
+
+	*pos += cnt;
+
+	return cnt;
+}
+
+ssize_t bl_selftest_write(struct file *file, const char __user *buf,
+			  size_t count, loff_t *pos)
+{
+	char tmp[6] = { 0 };
+	int pwm_value = 0;
+
+	if (copy_from_user(tmp, buf, count)) {
+		printk("Failed to copy data from user space\n");
+		goto out;
+	}
+
+	if (!strncmp(tmp, "case1", 5))
+		caseid = 0;
+	else if (!strncmp(tmp, "case2", 5))
+		caseid = 1;
+	else {
+		kstrtoint(tmp, 10, &pwm_value);
+		switch (caseid) {
+		case 0:
+			ktz8866_case1_test(pwm_value, gresult);
+			break;
+		case 1:
+			ktz8866_case2_test(pwm_value, gresult);
+			break;
+		}
+	}
+
+out:
+	return count;
+}
+
+static const struct file_operations bl_selftest_fops = {
+	.read = bl_selftest_read,
+	.write = bl_selftest_write,
+};
+
+static int ktz8866_backlight_update_status(struct backlight_device *backlight)
+{
+	struct ktz8866 *bd = bl_get_data(backlight);
+	int exponential_bl = backlight->props.brightness;
+	int brightness = 0;
+	u8 v[2];
+
+	brightness = bl_level_remap[exponential_bl];
+	/* brightness = exponential_bl; */
+
+	if (brightness < 0 || brightness > BL_LEVEL_MAX)
+		return 0;
+
+	mutex_lock(&g_ktz8866_led.lock);
+
+	dev_warn(&bd->client->dev,
+		 "ktz8866 backlight 0x%02x ,exponential brightness %d \n",
+		 brightness, exponential_bl);
+
+	if (brightness > 0) {
+		ktz8866_writes(bd, KTZ8866_DISP_BL_ENABLE, 0x4f);
+		dev_warn(&bd->client->dev,
+			 "ktz8866 backlight enable,dimming close");
+	} else if (brightness == 0) {
+		ktz8866_writes(bd, KTZ8866_DISP_BL_ENABLE, 0x0f);
+		// usleep_range((10 * 1000),(10 * 1000) + 10);
+		dev_warn(&bd->client->dev,
+			 "ktz8866 backlight disable,dimming close");
+	}
+
+	v[0] = brightness & 0x7;
+	v[1] = (brightness >> 3) & 0xff;
+
+	ktz8866_writes(bd, KTZ8866_DISP_BB_LSB, v[0]);
+	ktz8866_writes(bd, KTZ8866_DISP_BB_MSB, v[1]);
+
+	g_ktz8866_led.level = brightness;
+
+	mutex_unlock(&g_ktz8866_led.lock);
+	return 0;
+}
+
+static int ktz8866_backlight_get_brightness(struct backlight_device *backlight)
+{
+	//struct ktz8866 *bd = bl_get_data(backlight);
+	int brightness = backlight->props.brightness;
+	u8 v[2];
+	mutex_lock(&g_ktz8866_led.lock);
+
+	ktz8866_read(0x5, &v[0]);
+	ktz8866_read(0x4, &v[1]);
+
+	brightness = (v[1] << 8) + v[0];
+
+	mutex_unlock(&g_ktz8866_led.lock);
+	return brightness;
+}
+
+static const struct backlight_ops ktz8866_backlight_ops = {
+	.options = BL_CORE_SUSPENDRESUME,
+	.update_status = ktz8866_backlight_update_status,
+	.get_brightness = ktz8866_backlight_get_brightness,
+};
+
+static int parse_dt(struct device *dev, struct ktz8866_platform_data *pdata)
+{
+	struct device_node *np = dev->of_node;
+
+	pdata->hw_en_gpio =
+		of_get_named_gpio_flags(np, "ktz8866,hwen-gpio", 0, NULL);
+
+	return 0;
+}
+
+static int ktz8866_probe(struct i2c_client *client,
+			 const struct i2c_device_id *id)
+{
+	//struct ktz8866_platform_data *pdata = dev_get_platdata(&client->dev);
+	struct backlight_device *backlight;
+	struct backlight_properties props;
+	int ret = 0;
+	u8 read;
+
+	bd = devm_kzalloc(&client->dev, sizeof(*bd), GFP_KERNEL);
+	if (!bd)
+		return -ENOMEM;
+	dev_warn(&client->dev, "ktz8866 bd = devm_kzalloc \n");
+
+	bd->pdata = devm_kzalloc(
+		&client->dev, sizeof(struct ktz8866_platform_data), GFP_KERNEL);
+	if (!bd->pdata)
+		return -ENOMEM;
+	dev_warn(&client->dev, "bd->pdata = devm_kzalloc \n");
+
+	bd->client = client;
+	bd->chip = id->driver_data;
+
+	dev_warn(&client->dev,
+		 "ktz8866 probe I2C adapter support I2C_FUNC_SMBUS_BYTE\n");
+
+	if (!i2c_check_functionality(client->adapter,
+				     I2C_FUNC_SMBUS_BYTE_DATA)) {
+		dev_warn(
+			&client->dev,
+			"ktz8866 I2C adapter doesn't support I2C_FUNC_SMBUS_BYTE\n");
+		return -EIO;
+	}
+	dev_warn(
+		&client->dev,
+		"ktz8866 i2c_check_functionality I2C adapter support I2C_FUNC_SMBUS_BYTE\n");
+
+	mutex_init(&g_ktz8866_led.lock);
+
+	memset(&props, 0, sizeof(props));
+	if (bd->chip == KTZ8866_A) {
+		bd->client->dev.init_name = "KTZ8866A";
+	} else {
+		bd->client->dev.init_name = "KTZ8866B";
+	}
+	props.type = BACKLIGHT_RAW;
+	props.max_brightness = 2047;
+	props.brightness = clamp_t(unsigned int, 98, 16, props.max_brightness);
+	dev_warn(&client->dev, "ktz8866 devm_backlight_device_register \n");
+	backlight = devm_backlight_device_register(
+		&client->dev, dev_name(&client->dev), &bd->client->dev, bd,
+		&ktz8866_backlight_ops, &props);
+	if (IS_ERR(backlight)) {
+		dev_err(&client->dev, "ktz8866 failed to register backlight\n");
+		return PTR_ERR(backlight);
+	}
+	// dev_warn(&client->dev,"ktz8866 backlight_update_status \n");
+	// backlight_update_status(backlight);
+	dev_warn(&client->dev, "ktz8866 i2c_set_clientdata \n");
+	i2c_set_clientdata(client, backlight);
+
+	parse_dt(&client->dev, bd->pdata);
+	dev_warn(&client->dev, "ktz8866 parse_dt \n");
+
+	if (bd->chip == KTZ8866_A) {
+		dev_warn(&client->dev,
+			 "ktz8866 ktz8866_probe KTZ8866_LCD_DRV_HW_EN\n");
+		ret = devm_gpio_request_one(&client->dev, bd->pdata->hw_en_gpio,
+					    GPIOF_DIR_OUT | GPIOF_INIT_HIGH,
+					    "HW_EN");
+		if (ret < 0) {
+			dev_err(&client->dev,
+				"unable to request L81A HW_EN GPIO\n");
+			return ret;
+		}
+	}
+
+	ktz8866_read(KTZ8866_DISP_FLAGS, &read);
+	dev_err(&bd->client->dev, "ktz8866 reading 0x%02x is 0x%02x\n",
+		KTZ8866_DISP_FLAGS, read);
+
+	if (bd->chip == KTZ8866_A) {
+		ktz8866_status.ktz8866a_init = true;
+		bd_a = bd;
+	} else if (bd->chip == KTZ8866_B) {
+		ktz8866_status.ktz8866b_init = true;
+		bd_b = bd;
+	}
+
+	if (ktz8866_status.ktz8866a_init == true &&
+	    ktz8866_status.ktz8866b_init == true) {
+		dev_info(
+			&client->dev,
+			"ktz8866a and ktz8866b init success create test node\n");
+		proc_create("bl_selftest", 0644, NULL, &bl_selftest_fops);
+	}
+
+	return ret;
+}
+
+static int ktz8866_remove(struct i2c_client *client)
+{
+	struct backlight_device *backlight = i2c_get_clientdata(client);
+
+	backlight->props.brightness = 0;
+	backlight_update_status(backlight);
+
+	return 0;
+}
+
+static const struct i2c_device_id ktz8866_ids[] = {
+	{ "ktz8866a", 0 },
+	{ "ktz8866b", 1 },
+};
+MODULE_DEVICE_TABLE(i2c, ktz8866_ids);
+
+static struct of_device_id ktz8866_match_table[] = {
+	{
+		.compatible = "ktz,ktz8866a",
+	},
+	{
+		.compatible = "ktz,ktz8866b",
+	},
+	{},
+};
+
+static struct i2c_driver ktz8866_driver = {
+    .driver = {
+        .name = "ktz8866",
+        .owner = THIS_MODULE,
+        .of_match_table = ktz8866_match_table,
+    },
+    .probe = ktz8866_probe,
+    .remove = ktz8866_remove,
+    .id_table = ktz8866_ids,
+};
+
+module_i2c_driver(ktz8866_driver);
+
+MODULE_DESCRIPTION("chenzilong ktz8866 Backlight Driver");
+MODULE_AUTHOR("Laurent Pinchart <chenzilong1@xiaomi.com>");
+MODULE_LICENSE("GPL");
diff --git a/drivers/video/backlight/ktz8866.c b/drivers/video/backlight/ktz8866.c
new file mode 100644
index 000000000000..5d9f567eb639
--- /dev/null
+++ b/drivers/video/backlight/ktz8866.c
@@ -0,0 +1,275 @@
+/*
+ * KTZ Semiconductor KTZ8866 LED Driver
+ *
+ * Copyright (C) 2013 Ideas on board SPRL
+ *
+ * Contact: Zhang Teng <zhangteng3@xiaomi.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/backlight.h>
+#include <linux/delay.h>
+#include <linux/err.h>
+#include <linux/fb.h>
+#include <linux/gpio.h>
+#include <linux/of.h>
+#include <linux/of_gpio.h>
+#include <linux/i2c.h>
+#include <linux/module.h>
+#include <linux/platform_data/ktz8866.h>
+#include <linux/slab.h>
+
+#define u8 unsigned char
+
+struct ktz8866 {
+	struct i2c_client *client;
+	struct backlight_device *backlight;
+	struct ktz8866_platform_data *pdata;
+};
+
+struct ktz8866 *bd;
+
+static struct ktz8866_led g_ktz8866_led;
+
+int ktz8866_read(u8 reg, u8 *data)
+{
+	int ret;
+
+	ret = i2c_smbus_read_byte_data(bd->client, reg);
+	if (ret < 0) {
+		dev_err(&bd->client->dev, "failed reading at 0x%02x\n", reg);
+		return ret;
+	}
+
+	*data = (uint8_t)ret;
+
+	return 0;
+}
+
+int ktz8866_write(u8 reg, u8 data)
+{
+	return i2c_smbus_write_byte_data(bd->client, reg, data);
+}
+
+static int ktz8866_backlight_update_status(struct backlight_device *backlight)
+{
+	//struct ktz8866 *bd = bl_get_data(backlight);
+	int exponential_bl = backlight->props.brightness;
+	int brightness = 0;
+	u8 v[2];
+
+	brightness = bl_level_remap[exponential_bl];
+	/* brightness = exponential_bl; */
+
+	if (brightness < 0 || brightness > BL_LEVEL_MAX ||
+	    brightness == g_ktz8866_led.level)
+		return 0;
+
+	mutex_lock(&g_ktz8866_led.lock);
+
+	dev_warn(&bd->client->dev,
+		 "ktz8866 backlight 0x%02x ,exponential brightness %d \n",
+		 brightness, exponential_bl);
+
+	if (!g_ktz8866_led.ktz8866_status && brightness > 0) {
+		ktz8866_write(KTZ8866_DISP_BL_ENABLE, 0x5f);
+		g_ktz8866_led.ktz8866_status = 1;
+		dev_warn(&bd->client->dev,
+			 "ktz8866 backlight enable,dimming close");
+	} else if (brightness == 0) {
+		ktz8866_write(KTZ8866_DISP_BL_ENABLE, 0x1f);
+		g_ktz8866_led.ktz8866_status = 0;
+		usleep_range((10 * 1000), (10 * 1000) + 10);
+		dev_warn(&bd->client->dev,
+			 "ktz8866 backlight disable,dimming close");
+	}
+
+	v[0] = (brightness >> 3) & 0xff;
+	v[1] = (brightness - (brightness >> 3) * 8) & 0x7;
+
+	//v[0] = brightness & 0xff;
+	//v[1] = (brightness >> 8) & 0x7;
+
+	ktz8866_write(KTZ8866_DISP_BB_LSB, v[1]);
+	ktz8866_write(KTZ8866_DISP_BB_MSB, v[0]);
+
+	g_ktz8866_led.level = brightness;
+
+	mutex_unlock(&g_ktz8866_led.lock);
+	return 0;
+}
+
+static int ktz8866_backlight_get_brightness(struct backlight_device *backlight)
+{
+	//struct ktz8866 *bd = bl_get_data(backlight);
+	int brightness = backlight->props.brightness;
+	u8 v[2];
+	mutex_lock(&g_ktz8866_led.lock);
+
+	ktz8866_read(0x5, &v[0]);
+	ktz8866_read(0x4, &v[1]);
+
+	brightness = (v[1] << 8) + v[0];
+
+	mutex_unlock(&g_ktz8866_led.lock);
+	return brightness;
+}
+
+static const struct backlight_ops ktz8866_backlight_ops = {
+	.options = BL_CORE_SUSPENDRESUME,
+	.update_status = ktz8866_backlight_update_status,
+	.get_brightness = ktz8866_backlight_get_brightness,
+};
+
+static int ktz8866_backlight_conf(struct ktz8866 *bd)
+{
+	int ret, i, reg_count;
+	u8 read;
+
+	dev_warn(&bd->client->dev, "ktz8866_backlight_conf \n");
+	mutex_lock(&g_ktz8866_led.lock);
+
+	reg_count = ARRAY_SIZE(ktz8866_regs_conf);
+	for (i = 0; i < reg_count; i++) {
+		ret = ktz8866_write(ktz8866_regs_conf[i].reg,
+				    ktz8866_regs_conf[i].value);
+		ktz8866_read(ktz8866_regs_conf[i].reg, &read);
+		dev_err(&bd->client->dev, "ktz8866 reading 0x%02x is 0x%02x\n",
+			ktz8866_regs_conf[i].reg, read);
+	}
+
+	mutex_unlock(&g_ktz8866_led.lock);
+	return ret;
+}
+
+static int parse_dt(struct device *dev, struct ktz8866_platform_data *pdata)
+{
+	struct device_node *np = dev->of_node;
+
+	pdata->hw_en_gpio =
+		of_get_named_gpio_flags(np, "ktz8866,hwen-gpio", 0, NULL);
+
+	pdata->enp_gpio =
+		of_get_named_gpio_flags(np, "ktz8866,enp-gpio", 0, NULL);
+
+	pdata->enn_gpio =
+		of_get_named_gpio_flags(np, "ktz8866,enn-gpio", 0, NULL);
+
+	return 0;
+}
+
+static int ktz8866_probe(struct i2c_client *client,
+			 const struct i2c_device_id *id)
+{
+	//struct ktz8866_platform_data *pdata = dev_get_platdata(&client->dev);
+	struct backlight_device *backlight;
+	struct backlight_properties props;
+	int ret;
+	u8 read;
+
+	dev_warn(&client->dev,
+		 "ktz8866 probe I2C adapter support I2C_FUNC_SMBUS_BYTE\n");
+
+	if (!i2c_check_functionality(client->adapter,
+				     I2C_FUNC_SMBUS_BYTE_DATA)) {
+		dev_warn(
+			&client->dev,
+			"ktz8866 I2C adapter doesn't support I2C_FUNC_SMBUS_BYTE\n");
+		return -EIO;
+	}
+	dev_warn(
+		&client->dev,
+		"ktz8866 i2c_check_functionality I2C adapter support I2C_FUNC_SMBUS_BYTE\n");
+
+	bd = devm_kzalloc(&client->dev, sizeof(*bd), GFP_KERNEL);
+	if (!bd)
+		return -ENOMEM;
+	dev_warn(&client->dev, "ktz8866 bd = devm_kzalloc \n");
+
+	bd->client = client;
+
+	mutex_init(&g_ktz8866_led.lock);
+
+	bd->pdata = devm_kzalloc(
+		&client->dev, sizeof(struct ktz8866_platform_data), GFP_KERNEL);
+	if (!bd->pdata)
+		return -ENOMEM;
+	dev_warn(&client->dev, "bd->pdata = devm_kzalloc \n");
+
+	memset(&props, 0, sizeof(props));
+	props.type = BACKLIGHT_RAW;
+	props.max_brightness = 2047;
+	props.brightness = clamp_t(unsigned int, 98, 16, props.max_brightness);
+	dev_warn(&client->dev, "ktz8866 devm_backlight_device_register \n");
+	backlight = devm_backlight_device_register(
+		&client->dev, dev_name(&client->dev), &bd->client->dev, bd,
+		&ktz8866_backlight_ops, &props);
+	if (IS_ERR(backlight)) {
+		dev_err(&client->dev, "ktz8866 failed to register backlight\n");
+		return PTR_ERR(backlight);
+	}
+	dev_warn(&client->dev, "ktz8866 backlight_update_status \n");
+	backlight_update_status(backlight);
+	dev_warn(&client->dev, "ktz8866 i2c_set_clientdata \n");
+	i2c_set_clientdata(client, backlight);
+
+	parse_dt(&client->dev, bd->pdata);
+	dev_warn(&client->dev, "ktz8866 parse_dt \n");
+
+	dev_warn(&client->dev, "ktz8866 ktz8866_probe KTZ8866_LCD_DRV_HW_EN\n");
+	ret = devm_gpio_request_one(&client->dev, bd->pdata->hw_en_gpio,
+				    GPIOF_DIR_OUT | GPIOF_INIT_HIGH, "HW_EN");
+	if (ret < 0) {
+		dev_err(&client->dev, "unable to request K81 HW_EN GPIO\n");
+		return ret;
+	}
+
+	dev_warn(&client->dev, "ktz8866 ktz8866_backlight_conf \n");
+	ktz8866_backlight_conf(bd);
+
+	ktz8866_read(KTZ8866_DISP_FLAGS, &read);
+	dev_err(&bd->client->dev, "ktz8866 reading 0x%02x is 0x%02x\n",
+		KTZ8866_DISP_FLAGS, read);
+
+	return ret;
+}
+
+static int ktz8866_remove(struct i2c_client *client)
+{
+	struct backlight_device *backlight = i2c_get_clientdata(client);
+
+	backlight->props.brightness = 0;
+	backlight_update_status(backlight);
+
+	return 0;
+}
+
+static const struct i2c_device_id ktz8866_ids[] = { { "ktz8866", 0 }, {} };
+MODULE_DEVICE_TABLE(i2c, ktz8866_ids);
+
+static struct of_device_id ktz8866_match_table[] = {
+	{
+		.compatible = "ktz,ktz8866",
+	},
+	{},
+};
+
+static struct i2c_driver ktz8866_driver = {
+	.driver = {
+		.name = "ktz8866",
+		.owner = THIS_MODULE,
+		.of_match_table = ktz8866_match_table,
+	},
+	.probe = ktz8866_probe,
+	.remove = ktz8866_remove,
+	.id_table = ktz8866_ids,
+};
+
+module_i2c_driver(ktz8866_driver);
+
+MODULE_DESCRIPTION("zhangteng3 ktz8866 Backlight Driver");
+MODULE_AUTHOR("Laurent Pinchart <zhangteng3@xiaomi.com>");
+MODULE_LICENSE("GPL");
diff --git a/include/linux/platform_data/dualktz8866.h b/include/linux/platform_data/dualktz8866.h
new file mode 100644
index 000000000000..7ca50f8c8bf9
--- /dev/null
+++ b/include/linux/platform_data/dualktz8866.h
@@ -0,0 +1,300 @@
+/*
+ * ktz8866.h - ktz8866 LEDs Driver
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+#ifndef __DUALKTZ8866_H__
+#define __DUALKTZ8866_H__
+
+struct device;
+
+struct ktz8866_status {
+	bool ktz8866a_init;
+	bool ktz8866b_init;
+};
+
+struct pwm_to_51 {
+	int pwm;
+	int bl_value;
+};
+
+struct pwm_reg {
+	u8 lbyte;
+	u8 hbyte;
+};
+
+struct ktz8866_platform_data {
+	struct device *fbdev;
+	int hw_en_gpio;
+	int enp_gpio;
+	int enn_gpio;
+};
+
+/* KTZ8866 backlight I2C driver */
+#define KTZ8866_backlight_EN_MASK         0x40
+#define KTZ8866_backlight_EN_SHIFT        6
+#define KTZ8866_backlight_DISABLE         0
+#define KTZ8866_backlight_ENABLE          1
+#define KTZ8866_LCD_BIAS_ENP              130       //GPIO for Enable pin for positive power (OUTP)
+#define KTZ8866_LCD_BIAS_ENN              131       //GPIO for Enable pin for negative power (OUTN)
+#define KTZ8866_LCD_DRV_HW_EN             139       //GPIO for Active high hardware enable pin
+#define KTZ8866_LCD_DRV_I2C_SCL           61       //Clock of the I 2 C interface.
+#define KTZ8866_LCD_DRV_I2C_SDA           60       //Bi-directional data pin of the I 2 C interface.
+#define KTZ8866_DISP_ID                   0x01
+#define KTZ8866_DISP_BC1                  0x02
+#define KTZ8866_DISP_BC2                  0x03
+#define KTZ8866_DISP_BB_LSB               0x04
+#define KTZ8866_DISP_BB_MSB               0x05
+#define KTZ8866_DISP_BL_ENABLE            0x08
+#define KTZ8866_DISP_BIAS_CONF1           0x09
+#define KTZ8866_DISP_BIAS_CONF2           0x0a
+#define KTZ8866_DISP_BIAS_CONF3           0x0b
+#define KTZ8866_DISP_BIAS_BOOST           0x0c
+#define KTZ8866_DISP_BIAS_VPOS            0x0d
+#define KTZ8866_DISP_BIAS_VNEG            0x0e
+#define KTZ8866_DISP_FLAGS                0x0f
+#define KTZ8866_DISP_OPTION1              0x10
+#define KTZ8866_DISP_OPTION2              0x11
+#define KTZ8866_DISP_PTD_LSB              0x12
+#define KTZ8866_DISP_PTD_MSB              0x13
+#define KTZ8866_DISP_DIMMING              0x14
+#define KTZ8866_DISP_FULL_CURRENT         0x15
+#define BL_LEVEL_MAX 2047
+
+struct ktz8866_reg {
+	unsigned char reg;
+	unsigned char value;
+};
+
+/**
+ * struct ktz8866_led -
+ * @lock - Lock for reading/writing the device
+ * @level - setting backlight level
+ * @level - setting backlight status
+**/
+struct ktz8866_led {
+		struct mutex lock;
+		int level;
+		bool ktz8866_status;
+		bool dimming_status;
+};
+
+static struct ktz8866_reg ktz8866_regs_conf[] = {
+	{ KTZ8866_DISP_BB_LSB, 0x01 },/* LSB: limit I2C code 1009 DBV level*/
+	{ KTZ8866_DISP_BB_MSB, 0x7E },/* MSB: limit I2C code 1009 DBV level*/
+	{ KTZ8866_DISP_BC1, 0x53 },/* KTZ8866_DISP_BC1*/
+	{ KTZ8866_DISP_BC2, 0xcd },/* KTZ8866_DISP_BC2*/
+	{ KTZ8866_DISP_FULL_CURRENT, 0x91 },/* KTZ8866_DISP_FULL_CURRENT*/
+	{ KTZ8866_DISP_BL_ENABLE, 0x4f },/* KTZ8866_DISP_BL_ENABLE BL_EN*/
+};
+
+const int bl_level_remap[BL_LEVEL_MAX+1] = {
+0,17,17,31,40,54,107,132,163,186,
+213,222,241,260,279,300,321,330,349,365,
+379,395,408,419,430,440,449,458,466,485,
+507,525,540,558,573,583,594,607,621,635,
+646,659,669,676,681,690,703,711,720,728,
+738,746,751,759,768,775,783,789,797,804,
+810,815,821,830,835,842,847,852,859,862,
+868,874,879,886,891,897,902,911,916,921,
+926,930,936,940,944,948,952,957,962,966,
+970,974,978,980,984,988,992,996,1000,1004,
+1008,1011,1014,1018,1022,1025,1029,1032,1035,1038,
+1040,1041,1044,1048,1051,1054,1057,1061,1063,1065,
+1068,1071,1075,1078,1081,1084,1087,1090,1091,1094,
+1096,1099,1102,1105,1107,1108,1111,1114,1117,1120,
+1122,1124,1127,1130,1132,1135,1138,1140,1142,1146,
+1148,1151,1153,1154,1156,1159,1161,1163,1165,1168,
+1170,1172,1173,1176,1178,1180,1182,1185,1187,1189,
+1190,1193,1195,1197,1199,1202,1204,1206,1208,1209,
+1211,1213,1215,1217,1219,1221,1222,1224,1225,1227,
+1228,1230,1232,1234,1236,1237,1238,1240,1242,1243,
+1245,1247,1249,1251,1252,1253,1255,1256,1258,1260,
+1262,1263,1265,1268,1270,1272,1274,1275,1276,1279,
+1280,1282,1283,1284,1286,1287,1289,1290,1292,1293,
+1294,1296,1297,1299,1300,1302,1303,1304,1305,1307,
+1308,1310,1311,1313,1314,1316,1317,1318,1319,1321,
+1322,1323,1325,1326,1328,1329,1330,1332,1334,1335,
+1337,1338,1339,1341,1342,1343,1345,1346,1347,1348,
+1349,1351,1352,1353,1354,1355,1356,1357,1358,1360,
+1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,
+1371,1373,1374,1375,1376,1377,1378,1379,1380,1381,
+1382,1383,1384,1385,1387,1388,1389,1390,1391,1392,
+1393,1395,1396,1397,1398,1399,1400,1401,1402,1403,
+1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,
+1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,
+1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,
+1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,
+1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,
+1454,1455,1456,1457,1457,1458,1459,1460,1461,1462,
+1463,1464,1465,1466,1467,1467,1468,1469,1470,1471,
+1471,1472,1473,1473,1474,1475,1476,1477,1478,1479,
+1480,1481,1481,1482,1483,1484,1484,1485,1486,1487,
+1488,1489,1490,1490,1491,1492,1493,1494,1495,1496,
+1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,
+1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,
+1517,1518,1519,1520,1521,1522,1523,1524,1524,1524,
+1524,1524,1524,1524,1524,1525,1526,1527,1528,1529,
+1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,
+1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,
+1550,1551,1552,1552,1552,1552,1552,1552,1552,1552,
+1552,1552,1552,1552,1552,1553,1554,1554,1555,1556,
+1556,1557,1557,1558,1559,1559,1560,1561,1562,1562,
+1563,1564,1564,1565,1565,1566,1566,1567,1567,1567,
+1568,1569,1569,1570,1571,1572,1572,1573,1574,1574,
+1575,1575,1576,1577,1578,1578,1579,1580,1581,1582,
+1583,1584,1585,1585,1586,1586,1587,1587,1588,1588,
+1588,1588,1589,1589,1589,1589,1590,1590,1590,1590,
+1591,1592,1593,1593,1594,1595,1596,1596,1597,1597,
+1598,1598,1599,1599,1600,1600,1601,1602,1603,1603,
+1604,1604,1605,1605,1606,1606,1607,1607,1608,1608,
+1609,1609,1610,1610,1611,1611,1612,1612,1613,1613,
+1614,1615,1615,1616,1617,1617,1618,1618,1619,1619,
+1620,1620,1621,1621,1622,1622,1623,1624,1625,1626,
+1627,1627,1628,1628,1629,1629,1630,1630,1631,1631,
+1632,1632,1633,1633,1634,1634,1635,1635,1636,1636,
+1637,1638,1638,1639,1640,1640,1641,1641,1642,1642,
+1643,1643,1644,1644,1645,1645,1646,1647,1647,1648,
+1648,1649,1649,1650,1650,1651,1651,1652,1653,1653,
+1654,1654,1655,1656,1656,1657,1657,1658,1658,1659,
+1659,1660,1660,1661,1662,1662,1663,1663,1664,1664,
+1664,1665,1665,1665,1666,1666,1667,1667,1668,1668,
+1669,1669,1670,1670,1671,1671,1672,1672,1673,1673,
+1674,1674,1675,1675,1676,1676,1676,1677,1677,1678,
+1678,1679,1679,1679,1680,1680,1681,1681,1682,1682,
+1683,1683,1684,1684,1685,1685,1686,1686,1686,1686,
+1687,1687,1687,1688,1688,1689,1689,1690,1690,1691,
+1692,1693,1693,1694,1694,1695,1695,1696,1696,1697,
+1697,1698,1698,1699,1699,1700,1700,1701,1701,1701,
+1702,1702,1702,1703,1703,1704,1704,1705,1705,1706,
+1706,1707,1707,1708,1708,1709,1709,1710,1710,1710,
+1711,1711,1711,1712,1712,1713,1713,1714,1714,1715,
+1715,1716,1716,1717,1717,1718,1718,1719,1719,1720,
+1720,1721,1721,1722,1722,1723,1723,1724,1724,1724,
+1724,1725,1725,1725,1726,1726,1726,1727,1727,1728,
+1728,1729,1729,1730,1730,1730,1731,1731,1732,1732,
+1732,1733,1733,1733,1734,1734,1734,1735,1735,1736,
+1736,1736,1736,1737,1737,1738,1738,1739,1739,1739,
+1740,1740,1740,1741,1741,1741,1742,1742,1743,1743,
+1743,1744,1744,1744,1745,1745,1746,1747,1747,1748,
+1748,1749,1749,1749,1750,1750,1751,1751,1751,1752,
+1752,1752,1752,1753,1753,1754,1754,1755,1755,1756,
+1756,1756,1757,1757,1757,1758,1758,1759,1759,1760,
+1760,1761,1761,1761,1762,1762,1762,1763,1763,1763,
+1764,1764,1765,1765,1765,1766,1766,1766,1766,1767,
+1767,1767,1767,1768,1768,1769,1769,1770,1770,1770,
+1771,1771,1771,1772,1772,1772,1773,1773,1773,1774,
+1774,1775,1775,1776,1776,1776,1776,1777,1777,1777,
+1778,1778,1778,1779,1779,1779,1780,1780,1781,1781,
+1782,1782,1782,1783,1783,1784,1784,1784,1785,1785,
+1786,1786,1787,1787,1788,1788,1789,1789,1789,1789,
+1790,1790,1791,1791,1792,1792,1792,1792,1793,1793,
+1793,1793,1794,1794,1794,1794,1795,1795,1796,1796,
+1796,1797,1797,1798,1798,1799,1799,1799,1800,1800,
+1800,1800,1801,1801,1801,1801,1802,1802,1802,1803,
+1803,1804,1804,1804,1805,1805,1805,1805,1806,1806,
+1806,1806,1807,1807,1807,1807,1808,1808,1809,1809,
+1810,1810,1810,1810,1811,1811,1811,1811,1812,1812,
+1813,1813,1814,1814,1814,1814,1815,1815,1815,1815,
+1815,1815,1816,1816,1816,1816,1816,1816,1816,1816,
+1816,1816,1817,1817,1817,1817,1818,1818,1818,1818,
+1819,1819,1819,1819,1820,1820,1820,1820,1821,1821,
+1822,1822,1822,1823,1823,1823,1824,1824,1824,1824,
+1825,1825,1825,1825,1826,1826,1826,1826,1827,1827,
+1828,1828,1829,1829,1829,1829,1830,1830,1830,1831,
+1831,1832,1832,1832,1833,1833,1833,1833,1834,1834,
+1834,1835,1835,1835,1836,1836,1837,1837,1837,1837,
+1838,1838,1838,1838,1839,1839,1840,1840,1841,1841,
+1841,1841,1842,1842,1842,1842,1843,1843,1843,1843,
+1844,1844,1845,1845,1846,1846,1846,1846,1847,1847,
+1847,1848,1848,1849,1849,1849,1850,1850,1850,1850,
+1850,1851,1851,1851,1851,1852,1852,1852,1853,1853,
+1854,1854,1854,1855,1855,1855,1855,1856,1856,1856,
+1856,1857,1857,1857,1857,1858,1858,1858,1858,1859,
+1859,1859,1859,1860,1860,1861,1861,1862,1862,1862,
+1862,1863,1863,1863,1863,1864,1864,1864,1864,1865,
+1865,1865,1865,1866,1866,1866,1866,1867,1867,1867,
+1867,1868,1868,1868,1868,1869,1869,1869,1869,1870,
+1870,1870,1870,1871,1871,1871,1871,1872,1872,1873,
+1873,1874,1874,1874,1874,1875,1875,1875,1875,1876,
+1876,1876,1876,1877,1877,1877,1877,1878,1878,1878,
+1878,1879,1879,1880,1880,1881,1881,1881,1881,1882,
+1882,1882,1882,1883,1883,1883,1883,1884,1884,1884,
+1884,1885,1885,1885,1885,1886,1886,1886,1886,1887,
+1887,1887,1887,1888,1888,1888,1888,1889,1889,1889,
+1889,1890,1890,1890,1890,1891,1891,1891,1891,1892,
+1892,1892,1893,1893,1893,1894,1894,1895,1895,1895,
+1895,1896,1896,1896,1896,1897,1897,1897,1897,1898,
+1898,1898,1898,1899,1899,1899,1899,1900,1900,1900,
+1900,1901,1901,1901,1901,1902,1902,1902,1902,1903,
+1903,1903,1904,1904,1904,1905,1905,1906,1906,1906,
+1906,1907,1907,1907,1907,1908,1908,1908,1908,1909,
+1909,1909,1909,1910,1910,1910,1910,1911,1911,1911,
+1912,1912,1913,1913,1913,1914,1914,1914,1914,1914,
+1915,1915,1915,1915,1916,1916,1916,1916,1917,1917,
+1917,1917,1918,1918,1918,1918,1919,1919,1919,1919,
+1920,1920,1920,1920,1921,1921,1921,1921,1922,1922,
+1922,1922,1923,1923,1923,1923,1924,1924,1924,1924,
+1925,1925,1925,1925,1925,1925,1925,1925,1926,1926,
+1926,1926,1927,1927,1927,1927,1928,1928,1928,1928,
+1929,1929,1929,1929,1930,1930,1930,1930,1931,1931,
+1931,1931,1932,1932,1932,1932,1933,1933,1933,1933,
+1934,1934,1934,1934,1935,1935,1935,1935,1935,1935,
+1935,1935,1936,1936,1936,1936,1937,1937,1937,1937,
+1938,1938,1938,1939,1939,1939,1939,1939,1940,1940,
+1940,1940,1941,1941,1941,1941,1942,1942,1942,1942,
+1943,1943,1943,1943,1944,1944,1944,1944,1945,1945,
+1945,1945,1946,1946,1946,1946,1947,1947,1947,1947,
+1948,1948,1948,1948,1949,1949,1949,1949,1950,1950,
+1950,1950,1950,1950,1950,1950,1951,1951,1951,1951,
+1952,1952,1952,1952,1952,1952,1952,1952,1953,1953,
+1953,1953,1954,1954,1954,1954,1955,1955,1955,1955,
+1956,1956,1956,1956,1957,1957,1957,1957,1958,1958,
+1958,1958,1959,1959,1959,1959,1960,1960,1960,1960,
+1961,1961,1961,1961,1962,1962,1962,1962,1962,1962,
+1962,1962,1963,1963,1963,1963,1964,1964,1964,1964,
+1965,1965,1965,1965,1965,1966,1966,1966,1966,1967,
+1967,1967,1967,1968,1968,1968,1968,1969,1969,1969,
+1969,1970,1970,1970,1970,1971,1971,1971,1971,1972,
+1972,1972,1972,1973,1973,1973,1973,1974,1974,1974,
+1974,1975,1975,1975,1975,1976,1976,1976,1976,1977,
+1977,1977,1977,1978,1978,1978,1978,1979,1979,1979,
+1979,1980,1980,1980,1980,1981,1981,1981,1981,1982,
+1982,1982,1982,1983,1983,1983,1983,1983,1983,1983,
+1983,1984,1984,1984,1984,1985,1985,1985,1985,1986,
+1986,1986,1986,1986,1986,1986,1986,1987,1987,1987,
+1987,1988,1988,1988,1988,1989,1989,1989,1989,1989,
+1989,1989,1989,1990,1990,1990,1990,1991,1991,1991,
+1991,1992,1992,1992,1992,1993,1993,1993,1993,1993,
+1993,1993,1993,1993,1993,1993,1993,1995,1995,1995,
+1995,1996,1996,1996,1996,1996,1996,1996,1996,1997,
+1997,1997,1997,1998,1998,1998,1998,1999,1999,1999,
+1999,1999,1999,1999,1999,2000,2000,2000,2000,2001,
+2001,2001,2001,2002,2002,2002,2002,2002,2002,2002,
+2002,2003,2003,2003,2003,2004,2004,2004,2004,2004,
+2004,2004,2004,2005,2005,2005,2005,2006,2006,2006,
+2006,2006,2007,2007,2007,2008,2008,2008,2008,2008,
+2008,2008,2008,2009,2009,2009,2009,2010,2010,2010,
+2010,2011,2011,2011,2011,2011,2011,2011,2011,2011,
+2012,2012,2012,2012,2013,2013,2013,2013,2014,2014,
+2014,2014,2015,2015,2015,2015,2015,2015,2015,2015,
+2016,2016,2016,2016,2017,2017,2017,2017,2018,2018,
+2018,2018,2019,2019,2019,2019,2019,2019,2019,2019,
+2020,2020,2020,2020,2021,2021,2021,2021,2021,2021,
+2021,2021,2022,2022,2022,2022,2023,2023,2023,2023,
+2024,2024,2024,2024,2025,2025,2025,2025,2026,2026,
+2026,2026,2027,2027,2027,2027,2027,2027,2027,2027,
+2028,2028,2028,2028,2029,2029,2029,2029,2029,2029,
+2029,2029,2030,2030,2030,2030,2031,2031,2031,2031,
+2032,2032,2032,2032,2032,2032,2033,2033,2033,2033,
+2033,2033,2034,2034,2034,2034,2035,2035,2035,2035,
+2036,2036,2036,2036,2037,2037,2037,2037,2037,2037,
+2037,2037,2038,2038,2038,2038,2039,2039,2039,2039,
+2039,2040,2040,2040,2040,2040,2040,2041,2041,2041,
+2041,2041,2042,2042,2042,2042,2042,2042,2042,2043,
+2043,2043,2043,2044,2044,2044,2044,2045,2045,2045,
+2045,2045,2046,2046,2046,2047,2047,2047 };
+
+#endif
diff --git a/include/linux/platform_data/ktz8866.h b/include/linux/platform_data/ktz8866.h
new file mode 100644
index 000000000000..0df391254748
--- /dev/null
+++ b/include/linux/platform_data/ktz8866.h
@@ -0,0 +1,287 @@
+/*
+ * ktz8866.h - ktz8866 LEDs Driver
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+#ifndef __KTZ8866_H__
+#define __KTZ8866_H__
+
+struct device;
+
+struct ktz8866_platform_data {
+	struct device *fbdev;
+	int hw_en_gpio;
+	int enp_gpio;
+	int enn_gpio;
+};
+
+/* KTZ8866 backlight I2C driver */
+#define KTZ8866_backlight_EN_MASK         0x40
+#define KTZ8866_backlight_EN_SHIFT        6
+#define KTZ8866_backlight_DISABLE         0
+#define KTZ8866_backlight_ENABLE          1
+#define KTZ8866_LCD_BIAS_ENP              130       //GPIO for Enable pin for positive power (OUTP)
+#define KTZ8866_LCD_BIAS_ENN              131       //GPIO for Enable pin for negative power (OUTN)
+#define KTZ8866_LCD_DRV_HW_EN             139       //GPIO for Active high hardware enable pin
+#define KTZ8866_LCD_DRV_I2C_SCL           61       //Clock of the I 2 C interface.
+#define KTZ8866_LCD_DRV_I2C_SDA           60       //Bi-directional data pin of the I 2 C interface.
+#define KTZ8866_DISP_ID                   0x01
+#define KTZ8866_DISP_BC1                  0x02
+#define KTZ8866_DISP_BC2                  0x03
+#define KTZ8866_DISP_BB_LSB               0x04
+#define KTZ8866_DISP_BB_MSB               0x05
+#define KTZ8866_DISP_BL_ENABLE            0x08
+#define KTZ8866_DISP_BIAS_CONF1           0x09
+#define KTZ8866_DISP_BIAS_CONF2           0x0a
+#define KTZ8866_DISP_BIAS_CONF3           0x0b
+#define KTZ8866_DISP_BIAS_BOOST           0x0c
+#define KTZ8866_DISP_BIAS_VPOS            0x0d
+#define KTZ8866_DISP_BIAS_VNEG            0x0e
+#define KTZ8866_DISP_FLAGS                0x0f
+#define KTZ8866_DISP_OPTION1              0x10
+#define KTZ8866_DISP_OPTION2              0x11
+#define KTZ8866_DISP_PTD_LSB              0x12
+#define KTZ8866_DISP_PTD_MSB              0x13
+#define KTZ8866_DISP_DIMMING              0x14
+#define KTZ8866_DISP_FULL_CURRENT         0x15
+#define BL_LEVEL_MAX 2047
+
+struct ktz8866_reg {
+	unsigned char reg;
+	unsigned char value;
+};
+
+/**
+ * struct ktz8866_led -
+ * @lock - Lock for reading/writing the device
+ * @level - setting backlight level
+ * @level - setting backlight status
+**/
+struct ktz8866_led {
+		struct mutex lock;
+		int level;
+		bool ktz8866_status;
+		bool dimming_status;
+};
+
+static struct ktz8866_reg ktz8866_regs_conf[] = {
+	{ KTZ8866_DISP_BB_LSB, 0x01 },/* LSB: limit I2C code 1009 DBV level*/
+	{ KTZ8866_DISP_BB_MSB, 0x7E },/* MSB: limit I2C code 1009 DBV level*/
+	{ KTZ8866_DISP_BC1, 0x33 },/* Backlight OVP 26.4V, exponential mapping*/
+	{ KTZ8866_DISP_FULL_CURRENT, 0xb1 },/* Backlight Full-scale LED Current 23mA*/
+	{ KTZ8866_DISP_BC2, 0xbd },/* LED ramping time 128ms*/
+	{ KTZ8866_DISP_DIMMING, 0x11 },/* LED on/off ramping time 1ms*/
+	{ KTZ8866_DISP_BIAS_CONF1, 0x9f },/* OUTP and OUTN enabled via pin ENP and ENN*/
+	{ KTZ8866_DISP_BL_ENABLE, 0x5f },/* KTZ8866_DISP_BL_ENABLE BL_EN*/
+};
+
+const int bl_level_remap[BL_LEVEL_MAX+1] = {
+0,17,17,31,40,54,107,132,163,186,
+213,222,241,260,279,300,321,330,349,365,
+379,395,408,419,430,440,449,458,466,485,
+507,525,540,558,573,583,594,607,621,635,
+646,659,669,676,681,690,703,711,720,728,
+738,746,751,759,768,775,783,789,797,804,
+810,815,821,830,835,842,847,852,859,862,
+868,874,879,886,891,897,902,911,916,921,
+926,930,936,940,944,948,952,957,962,966,
+970,974,978,980,984,988,992,996,1000,1004,
+1008,1011,1014,1018,1022,1025,1029,1032,1035,1038,
+1040,1041,1044,1048,1051,1054,1057,1061,1063,1065,
+1068,1071,1075,1078,1081,1084,1087,1090,1091,1094,
+1096,1099,1102,1105,1107,1108,1111,1114,1117,1120,
+1122,1124,1127,1130,1132,1135,1138,1140,1142,1146,
+1148,1151,1153,1154,1156,1159,1161,1163,1165,1168,
+1170,1172,1173,1176,1178,1180,1182,1185,1187,1189,
+1190,1193,1195,1197,1199,1202,1204,1206,1208,1209,
+1211,1213,1215,1217,1219,1221,1222,1224,1225,1227,
+1228,1230,1232,1234,1236,1237,1238,1240,1242,1243,
+1245,1247,1249,1251,1252,1253,1255,1256,1258,1260,
+1262,1263,1265,1268,1270,1272,1274,1275,1276,1279,
+1280,1282,1283,1284,1286,1287,1289,1290,1292,1293,
+1294,1296,1297,1299,1300,1302,1303,1304,1305,1307,
+1308,1310,1311,1313,1314,1316,1317,1318,1319,1321,
+1322,1323,1325,1326,1328,1329,1330,1332,1334,1335,
+1337,1338,1339,1341,1342,1343,1345,1346,1347,1348,
+1349,1351,1352,1353,1354,1355,1356,1357,1358,1360,
+1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,
+1371,1373,1374,1375,1376,1377,1378,1379,1380,1381,
+1382,1383,1384,1385,1387,1388,1389,1390,1391,1392,
+1393,1395,1396,1397,1398,1399,1400,1401,1402,1403,
+1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,
+1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,
+1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,
+1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,
+1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,
+1454,1455,1456,1457,1457,1458,1459,1460,1461,1462,
+1463,1464,1465,1466,1467,1467,1468,1469,1470,1471,
+1471,1472,1473,1473,1474,1475,1476,1477,1478,1479,
+1480,1481,1481,1482,1483,1484,1484,1485,1486,1487,
+1488,1489,1490,1490,1491,1492,1493,1494,1495,1496,
+1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,
+1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,
+1517,1518,1519,1520,1521,1522,1523,1524,1524,1524,
+1524,1524,1524,1524,1524,1525,1526,1527,1528,1529,
+1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,
+1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,
+1550,1551,1552,1552,1552,1552,1552,1552,1552,1552,
+1552,1552,1552,1552,1552,1553,1554,1554,1555,1556,
+1556,1557,1557,1558,1559,1559,1560,1561,1562,1562,
+1563,1564,1564,1565,1565,1566,1566,1567,1567,1567,
+1568,1569,1569,1570,1571,1572,1572,1573,1574,1574,
+1575,1575,1576,1577,1578,1578,1579,1580,1581,1582,
+1583,1584,1585,1585,1586,1586,1587,1587,1588,1588,
+1588,1588,1589,1589,1589,1589,1590,1590,1590,1590,
+1591,1592,1593,1593,1594,1595,1596,1596,1597,1597,
+1598,1598,1599,1599,1600,1600,1601,1602,1603,1603,
+1604,1604,1605,1605,1606,1606,1607,1607,1608,1608,
+1609,1609,1610,1610,1611,1611,1612,1612,1613,1613,
+1614,1615,1615,1616,1617,1617,1618,1618,1619,1619,
+1620,1620,1621,1621,1622,1622,1623,1624,1625,1626,
+1627,1627,1628,1628,1629,1629,1630,1630,1631,1631,
+1632,1632,1633,1633,1634,1634,1635,1635,1636,1636,
+1637,1638,1638,1639,1640,1640,1641,1641,1642,1642,
+1643,1643,1644,1644,1645,1645,1646,1647,1647,1648,
+1648,1649,1649,1650,1650,1651,1651,1652,1653,1653,
+1654,1654,1655,1656,1656,1657,1657,1658,1658,1659,
+1659,1660,1660,1661,1662,1662,1663,1663,1664,1664,
+1664,1665,1665,1665,1666,1666,1667,1667,1668,1668,
+1669,1669,1670,1670,1671,1671,1672,1672,1673,1673,
+1674,1674,1675,1675,1676,1676,1676,1677,1677,1678,
+1678,1679,1679,1679,1680,1680,1681,1681,1682,1682,
+1683,1683,1684,1684,1685,1685,1686,1686,1686,1686,
+1687,1687,1687,1688,1688,1689,1689,1690,1690,1691,
+1692,1693,1693,1694,1694,1695,1695,1696,1696,1697,
+1697,1698,1698,1699,1699,1700,1700,1701,1701,1701,
+1702,1702,1702,1703,1703,1704,1704,1705,1705,1706,
+1706,1707,1707,1708,1708,1709,1709,1710,1710,1710,
+1711,1711,1711,1712,1712,1713,1713,1714,1714,1715,
+1715,1716,1716,1717,1717,1718,1718,1719,1719,1720,
+1720,1721,1721,1722,1722,1723,1723,1724,1724,1724,
+1724,1725,1725,1725,1726,1726,1726,1727,1727,1728,
+1728,1729,1729,1730,1730,1730,1731,1731,1732,1732,
+1732,1733,1733,1733,1734,1734,1734,1735,1735,1736,
+1736,1736,1736,1737,1737,1738,1738,1739,1739,1739,
+1740,1740,1740,1741,1741,1741,1742,1742,1743,1743,
+1743,1744,1744,1744,1745,1745,1746,1747,1747,1748,
+1748,1749,1749,1749,1750,1750,1751,1751,1751,1752,
+1752,1752,1752,1753,1753,1754,1754,1755,1755,1756,
+1756,1756,1757,1757,1757,1758,1758,1759,1759,1760,
+1760,1761,1761,1761,1762,1762,1762,1763,1763,1763,
+1764,1764,1765,1765,1765,1766,1766,1766,1766,1767,
+1767,1767,1767,1768,1768,1769,1769,1770,1770,1770,
+1771,1771,1771,1772,1772,1772,1773,1773,1773,1774,
+1774,1775,1775,1776,1776,1776,1776,1777,1777,1777,
+1778,1778,1778,1779,1779,1779,1780,1780,1781,1781,
+1782,1782,1782,1783,1783,1784,1784,1784,1785,1785,
+1786,1786,1787,1787,1788,1788,1789,1789,1789,1789,
+1790,1790,1791,1791,1792,1792,1792,1792,1793,1793,
+1793,1793,1794,1794,1794,1794,1795,1795,1796,1796,
+1796,1797,1797,1798,1798,1799,1799,1799,1800,1800,
+1800,1800,1801,1801,1801,1801,1802,1802,1802,1803,
+1803,1804,1804,1804,1805,1805,1805,1805,1806,1806,
+1806,1806,1807,1807,1807,1807,1808,1808,1809,1809,
+1810,1810,1810,1810,1811,1811,1811,1811,1812,1812,
+1813,1813,1814,1814,1814,1814,1815,1815,1815,1815,
+1815,1815,1816,1816,1816,1816,1816,1816,1816,1816,
+1816,1816,1817,1817,1817,1817,1818,1818,1818,1818,
+1819,1819,1819,1819,1820,1820,1820,1820,1821,1821,
+1822,1822,1822,1823,1823,1823,1824,1824,1824,1824,
+1825,1825,1825,1825,1826,1826,1826,1826,1827,1827,
+1828,1828,1829,1829,1829,1829,1830,1830,1830,1831,
+1831,1832,1832,1832,1833,1833,1833,1833,1834,1834,
+1834,1835,1835,1835,1836,1836,1837,1837,1837,1837,
+1838,1838,1838,1838,1839,1839,1840,1840,1841,1841,
+1841,1841,1842,1842,1842,1842,1843,1843,1843,1843,
+1844,1844,1845,1845,1846,1846,1846,1846,1847,1847,
+1847,1848,1848,1849,1849,1849,1850,1850,1850,1850,
+1850,1851,1851,1851,1851,1852,1852,1852,1853,1853,
+1854,1854,1854,1855,1855,1855,1855,1856,1856,1856,
+1856,1857,1857,1857,1857,1858,1858,1858,1858,1859,
+1859,1859,1859,1860,1860,1861,1861,1862,1862,1862,
+1862,1863,1863,1863,1863,1864,1864,1864,1864,1865,
+1865,1865,1865,1866,1866,1866,1866,1867,1867,1867,
+1867,1868,1868,1868,1868,1869,1869,1869,1869,1870,
+1870,1870,1870,1871,1871,1871,1871,1872,1872,1873,
+1873,1874,1874,1874,1874,1875,1875,1875,1875,1876,
+1876,1876,1876,1877,1877,1877,1877,1878,1878,1878,
+1878,1879,1879,1880,1880,1881,1881,1881,1881,1882,
+1882,1882,1882,1883,1883,1883,1883,1884,1884,1884,
+1884,1885,1885,1885,1885,1886,1886,1886,1886,1887,
+1887,1887,1887,1888,1888,1888,1888,1889,1889,1889,
+1889,1890,1890,1890,1890,1891,1891,1891,1891,1892,
+1892,1892,1893,1893,1893,1894,1894,1895,1895,1895,
+1895,1896,1896,1896,1896,1897,1897,1897,1897,1898,
+1898,1898,1898,1899,1899,1899,1899,1900,1900,1900,
+1900,1901,1901,1901,1901,1902,1902,1902,1902,1903,
+1903,1903,1904,1904,1904,1905,1905,1906,1906,1906,
+1906,1907,1907,1907,1907,1908,1908,1908,1908,1909,
+1909,1909,1909,1910,1910,1910,1910,1911,1911,1911,
+1912,1912,1913,1913,1913,1914,1914,1914,1914,1914,
+1915,1915,1915,1915,1916,1916,1916,1916,1917,1917,
+1917,1917,1918,1918,1918,1918,1919,1919,1919,1919,
+1920,1920,1920,1920,1921,1921,1921,1921,1922,1922,
+1922,1922,1923,1923,1923,1923,1924,1924,1924,1924,
+1925,1925,1925,1925,1925,1925,1925,1925,1926,1926,
+1926,1926,1927,1927,1927,1927,1928,1928,1928,1928,
+1929,1929,1929,1929,1930,1930,1930,1930,1931,1931,
+1931,1931,1932,1932,1932,1932,1933,1933,1933,1933,
+1934,1934,1934,1934,1935,1935,1935,1935,1935,1935,
+1935,1935,1936,1936,1936,1936,1937,1937,1937,1937,
+1938,1938,1938,1939,1939,1939,1939,1939,1940,1940,
+1940,1940,1941,1941,1941,1941,1942,1942,1942,1942,
+1943,1943,1943,1943,1944,1944,1944,1944,1945,1945,
+1945,1945,1946,1946,1946,1946,1947,1947,1947,1947,
+1948,1948,1948,1948,1949,1949,1949,1949,1950,1950,
+1950,1950,1950,1950,1950,1950,1951,1951,1951,1951,
+1952,1952,1952,1952,1952,1952,1952,1952,1953,1953,
+1953,1953,1954,1954,1954,1954,1955,1955,1955,1955,
+1956,1956,1956,1956,1957,1957,1957,1957,1958,1958,
+1958,1958,1959,1959,1959,1959,1960,1960,1960,1960,
+1961,1961,1961,1961,1962,1962,1962,1962,1962,1962,
+1962,1962,1963,1963,1963,1963,1964,1964,1964,1964,
+1965,1965,1965,1965,1965,1966,1966,1966,1966,1967,
+1967,1967,1967,1968,1968,1968,1968,1969,1969,1969,
+1969,1970,1970,1970,1970,1971,1971,1971,1971,1972,
+1972,1972,1972,1973,1973,1973,1973,1974,1974,1974,
+1974,1975,1975,1975,1975,1976,1976,1976,1976,1977,
+1977,1977,1977,1978,1978,1978,1978,1979,1979,1979,
+1979,1980,1980,1980,1980,1981,1981,1981,1981,1982,
+1982,1982,1982,1983,1983,1983,1983,1983,1983,1983,
+1983,1984,1984,1984,1984,1985,1985,1985,1985,1986,
+1986,1986,1986,1986,1986,1986,1986,1987,1987,1987,
+1987,1988,1988,1988,1988,1989,1989,1989,1989,1989,
+1989,1989,1989,1990,1990,1990,1990,1991,1991,1991,
+1991,1992,1992,1992,1992,1993,1993,1993,1993,1993,
+1993,1993,1993,1993,1993,1993,1993,1995,1995,1995,
+1995,1996,1996,1996,1996,1996,1996,1996,1996,1997,
+1997,1997,1997,1998,1998,1998,1998,1999,1999,1999,
+1999,1999,1999,1999,1999,2000,2000,2000,2000,2001,
+2001,2001,2001,2002,2002,2002,2002,2002,2002,2002,
+2002,2003,2003,2003,2003,2004,2004,2004,2004,2004,
+2004,2004,2004,2005,2005,2005,2005,2006,2006,2006,
+2006,2006,2007,2007,2007,2008,2008,2008,2008,2008,
+2008,2008,2008,2009,2009,2009,2009,2010,2010,2010,
+2010,2011,2011,2011,2011,2011,2011,2011,2011,2011,
+2012,2012,2012,2012,2013,2013,2013,2013,2014,2014,
+2014,2014,2015,2015,2015,2015,2015,2015,2015,2015,
+2016,2016,2016,2016,2017,2017,2017,2017,2018,2018,
+2018,2018,2019,2019,2019,2019,2019,2019,2019,2019,
+2020,2020,2020,2020,2021,2021,2021,2021,2021,2021,
+2021,2021,2022,2022,2022,2022,2023,2023,2023,2023,
+2024,2024,2024,2024,2025,2025,2025,2025,2026,2026,
+2026,2026,2027,2027,2027,2027,2027,2027,2027,2027,
+2028,2028,2028,2028,2029,2029,2029,2029,2029,2029,
+2029,2029,2030,2030,2030,2030,2031,2031,2031,2031,
+2032,2032,2032,2032,2032,2032,2033,2033,2033,2033,
+2033,2033,2034,2034,2034,2034,2035,2035,2035,2035,
+2036,2036,2036,2036,2037,2037,2037,2037,2037,2037,
+2037,2037,2038,2038,2038,2038,2039,2039,2039,2039,
+2039,2040,2040,2040,2040,2040,2040,2041,2041,2041,
+2041,2041,2042,2042,2042,2042,2042,2042,2042,2043,
+2043,2043,2043,2044,2044,2044,2044,2045,2045,2045,
+2045,2045,2046,2046,2046,2047,2047,2047 };
+
+#endif
-- 
2.48.1

