From c9debe88b1dce60cc5ebc9097e7815bbdd356787 Mon Sep 17 00:00:00 2001
From: Demon000 <demonsingur@gmail.com>
Date: Tue, 18 Aug 2020 01:14:55 +0200
Subject: [PATCH 088/157] techpack: display: msm: notify sysfs for fod ui
 changes

Change-Id: I5559a9cfe00af58847e089764452a24c39830e20
---
 techpack/display/msm/dsi/dsi_display.c   | 31 ++++++++++++++++++++++++
 techpack/display/msm/dsi/dsi_display.h   |  3 +++
 techpack/display/msm/sde/sde_connector.c |  1 +
 3 files changed, 35 insertions(+)

diff --git a/techpack/display/msm/dsi/dsi_display.c b/techpack/display/msm/dsi/dsi_display.c
index d91ba8e7dad9..e33528d1d11a 100644
--- a/techpack/display/msm/dsi/dsi_display.c
+++ b/techpack/display/msm/dsi/dsi_display.c
@@ -5072,7 +5072,29 @@ static int dsi_display_validate_split_link(struct dsi_display *display)
 	return rc;
 }
 
+static ssize_t sysfs_fod_ui_read(struct device *dev,
+	struct device_attribute *attr, char *buf)
+{
+	struct dsi_display *display;
+	bool status;
+
+	display = dev_get_drvdata(dev);
+	if (!display) {
+		pr_err("Invalid display\n");
+		return -EINVAL;
+	}
+
+	status = atomic_read(&display->fod_ui);
+
+	return snprintf(buf, PAGE_SIZE, "%d\n", status);
+}
+
+static DEVICE_ATTR(fod_ui, 0444,
+			sysfs_fod_ui_read,
+			NULL);
+
 static struct attribute *display_fs_attrs[] = {
+	&dev_attr_fod_ui.attr,
 	NULL,
 };
 
@@ -5102,6 +5124,13 @@ static int dsi_display_sysfs_deinit(struct dsi_display *display)
 	return 0;
 }
 
+void dsi_display_set_fod_ui(struct dsi_display *display, bool status)
+{
+	struct device *dev = &display->pdev->dev;
+	atomic_set(&display->fod_ui, status);
+	sysfs_notify(&dev->kobj, NULL, "fod_ui");
+}
+
 /**
  * dsi_display_bind - bind dsi device with controlling device
  * @dev:        Pointer to base of platform device
@@ -5179,6 +5208,8 @@ static int dsi_display_bind(struct device *dev,
 		goto error;
 	}
 
+	atomic_set(&display->fod_ui, false);
+
 	memset(&info, 0x0, sizeof(info));
 
 	display_for_each_ctrl(i, display) {
diff --git a/techpack/display/msm/dsi/dsi_display.h b/techpack/display/msm/dsi/dsi_display.h
index 60b0b8a46b05..5fc1b90cf09b 100644
--- a/techpack/display/msm/dsi/dsi_display.h
+++ b/techpack/display/msm/dsi/dsi_display.h
@@ -275,6 +275,7 @@ struct dsi_display {
 	u32 clk_gating_config;
 	bool queue_cmd_waits;
 	struct workqueue_struct *dma_cmd_workq;
+	atomic_t fod_ui;
 };
 
 int dsi_display_dev_probe(struct platform_device *pdev);
@@ -748,4 +749,6 @@ int dsi_display_esd_irq_ctrl(struct dsi_display *display,
 
 struct dsi_display *get_main_display(void);
 
+void dsi_display_set_fod_ui(struct dsi_display *display, bool status);
+
 #endif /* _DSI_DISPLAY_H_ */
diff --git a/techpack/display/msm/sde/sde_connector.c b/techpack/display/msm/sde/sde_connector.c
index 62e343c77718..8d6412c2b581 100644
--- a/techpack/display/msm/sde/sde_connector.c
+++ b/techpack/display/msm/sde/sde_connector.c
@@ -805,6 +805,7 @@ void sde_connector_update_fod_hbm(struct drm_connector *connector)
 	mutex_lock(&display->panel->panel_lock);
 	dsi_panel_set_fod_hbm(display->panel, status);
 	mutex_unlock(&display->panel->panel_lock);
+	dsi_display_set_fod_ui(display, status);
 }
 
 struct sde_connector_dyn_hdr_metadata *sde_connector_get_dyn_hdr_meta(
-- 
2.48.1

