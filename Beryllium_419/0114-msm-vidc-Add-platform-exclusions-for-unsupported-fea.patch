From 3297563ed91042ff3217a445b293597a9d1a691b Mon Sep 17 00:00:00 2001
From: AngeloGioacchino Del Regno <kholk11@gmail.com>
Date: Fri, 22 Nov 2019 14:21:58 +0100
Subject: [PATCH 114/175] msm: vidc: Add platform exclusions for unsupported
 features

Legacy SoCs have got old VE firmwares and some of the features in
this vidc driver release are unsupported by these.

We need it working as soon as possible, so adopt this dirty way
of dealing with it.
---
 drivers/media/platform/msm/vidc/msm_vdec.c | 10 ++++++++--
 drivers/media/platform/msm/vidc/msm_venc.c |  4 ++++
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/drivers/media/platform/msm/vidc/msm_vdec.c b/drivers/media/platform/msm/vidc/msm_vdec.c
index ecbc73c54920..f0c40928aa6e 100644
--- a/drivers/media/platform/msm/vidc/msm_vdec.c
+++ b/drivers/media/platform/msm/vidc/msm_vdec.c
@@ -83,8 +83,10 @@ static const char *const vp9_level[] = {
 	"4.1",
 	"5.0",
 	"5.1",
+#ifdef VDEC_VP9_LEVEL61_AVAILABLE
 	"6.0",
 	"6.1",
+#endif
 };
 
 static const char *const mpeg2_profile[] = {
@@ -252,8 +254,8 @@ static struct msm_vidc_ctrl msm_vdec_ctrls[] = {
 		.name = "VP9 Level",
 		.type = V4L2_CTRL_TYPE_MENU,
 		.minimum = V4L2_MPEG_VIDC_VIDEO_VP9_LEVEL_UNUSED,
-		.maximum = V4L2_MPEG_VIDC_VIDEO_VP9_LEVEL_61,
-		.default_value = V4L2_MPEG_VIDC_VIDEO_VP9_LEVEL_61,
+		.maximum = V4L2_MPEG_VIDC_VIDEO_VP9_LEVEL_51,
+		.default_value = V4L2_MPEG_VIDC_VIDEO_VP9_LEVEL_51,
 		.menu_skip_mask = 0,
 		.qmenu = vp9_level,
 		.flags = V4L2_CTRL_FLAG_VOLATILE | V4L2_CTRL_FLAG_READ_ONLY,
@@ -597,7 +599,9 @@ static bool msm_vidc_check_for_vp9d_overload(struct msm_vidc_core *core)
 int msm_vdec_s_fmt(struct msm_vidc_inst *inst, struct v4l2_format *f)
 {
 	struct msm_vidc_format *fmt = NULL;
+#ifdef VDEC_FORMAT_CONSTRAINTS_SUPPORTED
 	struct msm_vidc_format_constraint *fmt_constraint = NULL;
+#endif
 	struct hal_frame_size frame_sz;
 	unsigned int extra_idx = 0;
 	int rc = 0;
@@ -645,6 +649,7 @@ int msm_vdec_s_fmt(struct msm_vidc_inst *inst, struct v4l2_format *f)
 				msm_comm_get_hal_output_buffer(inst),
 				f->fmt.pix_mp.pixelformat);
 
+#ifdef VDEC_FORMAT_CONSTRAINTS_SUPPORTED
 		fmt_constraint =
 		msm_comm_get_pixel_fmt_constraints(dec_pix_format_constraints,
 			ARRAY_SIZE(dec_pix_format_constraints),
@@ -666,6 +671,7 @@ int msm_vdec_s_fmt(struct msm_vidc_inst *inst, struct v4l2_format *f)
 				goto err_invalid_fmt;
 			}
 		}
+#endif
 
 		inst->clk_data.opb_fourcc = f->fmt.pix_mp.pixelformat;
 		if (msm_comm_get_stream_output_mode(inst) ==
diff --git a/drivers/media/platform/msm/vidc/msm_venc.c b/drivers/media/platform/msm/vidc/msm_venc.c
index 135a513989a7..a9e37f20b8b5 100644
--- a/drivers/media/platform/msm/vidc/msm_venc.c
+++ b/drivers/media/platform/msm/vidc/msm_venc.c
@@ -1162,6 +1162,7 @@ static struct msm_vidc_ctrl msm_venc_ctrls[] = {
 		),
 		.qmenu = mpeg_video_stream_format,
 	},
+#ifdef VENC_BITRATE_SAVINGS_AVAILABLE
 	{
 		.id = V4L2_CID_MPEG_VIDC_VENC_BITRATE_SAVINGS,
 		.name = "Enable/Disable bitrate savings",
@@ -1171,6 +1172,8 @@ static struct msm_vidc_ctrl msm_venc_ctrls[] = {
 		.default_value = V4L2_MPEG_MSM_VIDC_ENABLE,
 		.step = 1,
 	},
+#endif
+#ifdef VENC_ROI_TYPE_AVAILABLE
 	{
 		.id = V4L2_CID_MPEG_VIDC_VIDEO_ROI_TYPE,
 		.name = "ROI Type",
@@ -1185,6 +1188,7 @@ static struct msm_vidc_ctrl msm_venc_ctrls[] = {
 		),
 		.qmenu = roi_map_type,
 	},
+#endif
 	{
 		.id = V4L2_CID_MPEG_VIDC_VENC_COMPLEXITY,
 		.name = "Encoder complexity",
-- 
2.48.1

