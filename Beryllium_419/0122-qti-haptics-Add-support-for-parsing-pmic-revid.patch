From 00eed489d04b52f17783b5a5500206342608258b Mon Sep 17 00:00:00 2001
From: Quallenauge <Hamsi2k@freenet.de>
Date: Mon, 21 Sep 2020 22:19:01 +0200
Subject: [PATCH 122/175] qti-haptics: Add support for parsing pmic-revid.

Change-Id: I61f21cfc24940c9cb087160e4f82f46a70e33a06
---
 drivers/input/misc/qti-haptics.c | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/drivers/input/misc/qti-haptics.c b/drivers/input/misc/qti-haptics.c
index dac72b3e9e46..6ad9c26d9a4f 100644
--- a/drivers/input/misc/qti-haptics.c
+++ b/drivers/input/misc/qti-haptics.c
@@ -22,6 +22,7 @@
 #include <linux/slab.h>
 #include <linux/types.h>
 #include <linux/uaccess.h>
+#include <linux/qpnp/qpnp-revid.h>
 
 enum actutor_type {
 	ACT_LRA,
@@ -203,6 +204,7 @@ struct qti_hap_chip {
 	struct platform_device		*pdev;
 	struct device			*dev;
 	struct regmap			*regmap;
+	struct pmic_revid_data	*revid;
 	struct input_dev		*input_dev;
 	struct qti_hap_config		config;
 	struct qti_hap_play_info	play;
@@ -1410,6 +1412,7 @@ static int qti_haptics_parse_dt(struct qti_hap_chip *chip)
 {
 	struct qti_hap_config *config = &chip->config;
 	const struct device_node *node = chip->dev->of_node;
+	struct device_node *revid_node;
 	const char *str;
 	int rc = 0, tmp;
 
@@ -1420,6 +1423,25 @@ static int qti_haptics_parse_dt(struct qti_hap_chip *chip)
 	}
 	chip->reg_base = (u16)tmp;
 
+	revid_node = of_parse_phandle(node, "qcom,pmic-revid", 0);
+	if (!revid_node) {
+		pr_err("Missing qcom,pmic-revid property\n");
+		return -EINVAL;
+	}
+
+	chip->revid = get_revid_data(revid_node);
+	of_node_put(revid_node);
+	if (IS_ERR_OR_NULL(chip->revid)) {
+		pr_err("Unable to get pmic_revid rc=%ld\n",
+			PTR_ERR(chip->revid));
+		/*
+		 * the revid peripheral must be registered, any failure
+		 * here only indicates that the rev-id module has not
+		 * probed yet.
+		 */
+		return -EPROBE_DEFER;
+	}
+
 	chip->sc_irq = platform_get_irq_byname(chip->pdev, "hap-sc-irq");
 	if (chip->sc_irq < 0) {
 		dev_err(chip->dev, "Failed to get hap-sc-irq\n");
-- 
2.48.1

