From c21385dd236210b085b7b53656b13c59fe5d2f67 Mon Sep 17 00:00:00 2001
From: "Angelo G. Del Regno" <kholk11@gmail.com>
Date: Sun, 1 Jul 2018 22:03:37 +0200
Subject: [PATCH 089/175] thermal: qcom: msm_lmh_dcvs: Never initialize LMH TZ
 more than once

The LMH DCVS initialization consists in enabling the LMH thermal,
outer loop, reliability and BCL algorithms on a per-cluster
basis, but the command that kickstarts it is "PROFILE_CHANGE"
with parameter '1' sent to the TZ LMH Service.

Sending it more than one time is rendundant, but the critical
issue is that - if we send it more than once - the CPUs will
deadlock!
---
 drivers/thermal/qcom/msm_lmh_dcvs.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/drivers/thermal/qcom/msm_lmh_dcvs.c b/drivers/thermal/qcom/msm_lmh_dcvs.c
index 835a53fb6425..6fbd63303b3a 100644
--- a/drivers/thermal/qcom/msm_lmh_dcvs.c
+++ b/drivers/thermal/qcom/msm_lmh_dcvs.c
@@ -80,6 +80,8 @@ struct __limits_cdev_data {
 	u32 min_freq;
 };
 
+static bool lmh_enabled = false;
+
 struct limits_dcvs_hw {
 	char sensor_name[THERMAL_NAME_LENGTH];
 	uint32_t affinity;
@@ -349,6 +351,9 @@ static int enable_lmh(void)
 	int ret = 0;
 	struct scm_desc desc_arg;
 
+	if (lmh_enabled)
+		return 0;
+
 	desc_arg.args[0] = 1;
 	desc_arg.arginfo = SCM_ARGS(1, SCM_VAL);
 	ret = scm_call2(SCM_SIP_FNID(SCM_SVC_LMH, LIMITS_PROFILE_CHANGE),
@@ -358,6 +363,8 @@ static int enable_lmh(void)
 		return ret;
 	}
 
+	lmh_enabled = true;
+
 	return ret;
 }
 
-- 
2.48.1

